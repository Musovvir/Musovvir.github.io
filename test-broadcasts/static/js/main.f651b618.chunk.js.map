{"version":3,"sources":["components/Broadcast.js","redux/actions.js","components/Broadcasts.js","components/Record.js","components/Records.js","components/App.js","redux/broadcasts.js","redux/records.js","index.js"],"names":["Broadcast","props","dispatch","useDispatch","opened","useSelector","state","broadcasts","handleClick","id","type","payload","fetch","then","response","json","loadRecords","key","broadcast","_id","className","onClick","title","Broadcasts","map","Record","record","content","Records","records","loading","App","useEffect","initialState","logger","createLogger","collapsed","diff","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0TAuBeA,MAlBf,SAAmBC,GACjB,IAAMC,EAAWC,cACXC,EAASC,aAAY,SAACC,GAAD,OAAWA,EAAMC,WAAWH,UACjDI,EAAc,SAACC,GACnBP,ECMG,SAAqBO,GAC1B,OAAO,SAACP,GACNA,EAAS,CAAEQ,KAAM,uBACjBR,EAAS,CAAEQ,KAAM,aAAcC,QAASF,IAExCG,MAAM,yCAAD,OAA0CH,IAC5CI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GACLb,EAAS,CACPQ,KAAM,uBACNC,QAASI,QDhBNC,CAAYP,KAGvB,OACE,yBACEQ,IAAKhB,EAAMiB,UAAUC,IACrBC,UAAS,gBAAWhB,IAAWH,EAAMiB,UAAUC,IAAM,SAAW,IAChEE,QAAS,kBAAMb,EAAYP,EAAMiB,UAAUC,OAE1ClB,EAAMiB,UAAUI,QEDRC,MAZf,WACE,IAAMhB,EAAaF,aAAY,SAACC,GAAD,OAAWA,EAAMC,WAAWA,cAE3D,OACE,yBAAKa,UAAU,cACZb,EAAWiB,KAAI,SAACN,GACf,OAAO,kBAAC,EAAD,CAAWD,IAAKC,EAAUC,IAAKD,UAAWA,S,YCC1CO,MATf,YAA6B,IAAXC,EAAU,EAAVA,OAChB,OACE,yBAAKN,UAAU,UACb,yBAAKA,UAAU,eAAeM,EAAOJ,OACrC,yBAAKF,UAAU,WAAWM,EAAOC,WCyBxBC,MA3Bf,WACE,IAAMxB,EAASC,aAAY,SAACC,GAAD,OAAWA,EAAMC,WAAWH,UACjDyB,EAAUxB,aAAY,SAACC,GAAD,OAAWA,EAAMuB,QAAQA,WAC/CC,EAAUzB,aAAY,SAACC,GAAD,OAAWA,EAAMuB,QAAQC,WAErD,OAAe,OAAX1B,EAEA,yBAAKgB,UAAU,UACb,uBAAGA,UAAU,+BADf,iHAOAU,EACK,yBAAKV,UAAU,UAAf,gFAIP,yBAAKA,UAAU,WACZS,EAAQL,KAAI,SAACE,GACZ,OAAO,kBAAC,EAAD,CAAQA,OAAQA,SCFhBK,MAjBf,WACE,IAAMD,EAAUzB,aAAY,SAACC,GAAD,OAAWA,EAAMC,WAAWuB,WAClD5B,EAAWC,cAKjB,OAHA6B,qBAAU,WACR9B,GJXK,SAACA,GACNA,EAAS,CAAEQ,KAAM,0BAEjBE,MAAM,0CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GACLb,EAAS,CACPQ,KAAM,0BACNC,QAASI,YIId,CAACb,IAEF,yBAAKkB,UAAU,OACb,yBAAKA,UAAU,QACZU,EAAU,+EAAqB,kBAAC,EAAD,MAChC,kBAAC,EAAD,S,8BClBFG,EAAe,CACnBH,SAAS,EACTvB,WAAY,GACZH,OAAQ,MCHV,IAAM6B,EAAe,CACnBH,SAAS,EACTD,QAAS,ICQX,IAAMK,EAASC,uBAAa,CAC1BC,WAAW,EACXC,MAAM,IAGFC,EAAcC,YAAgB,CAAEhC,WFTvB,WAAmD,IAA/BD,EAA8B,uDAAtB2B,EAAcO,EAAQ,uCAC/D,OAAQA,EAAO9B,MACb,IAAK,wBACH,OAAO,2BACFJ,GADL,IAEEwB,SAAS,IAGb,IAAK,aACH,OAAO,2BACFxB,GADL,IAEEF,OAAQoC,EAAO7B,UAGnB,IAAK,0BACH,OAAO,2BACFL,GADL,IAEEwB,SAAS,EACTvB,WAAYiC,EAAO7B,UAGvB,QACE,OAAOL,IEbqCuB,QDVnC,WAAgD,IAA/BvB,EAA8B,uDAAtB2B,EAAcO,EAAQ,uCAC5D,OAAQA,EAAO9B,MACb,IAAK,qBACH,OAAO,2BACFJ,GADL,IAEEwB,SAAS,IAGb,IAAK,uBACH,OAAO,2BACFxB,GADL,IAEEwB,SAAS,EACTD,QAASW,EAAO7B,UAGpB,QACE,OAAOL,MCJPmC,EAAQC,YAAYJ,EAAaK,YAAgBC,IAAOV,IAE9DW,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAAC,EAAD,QAGJO,SAASC,eAAe,W","file":"static/js/main.f651b618.chunk.js","sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loadRecords } from \"../redux/actions\";\nimport \"./Broadcast.css\";\n\nfunction Broadcast(props) {\n  const dispatch = useDispatch();\n  const opened = useSelector((state) => state.broadcasts.opened);\n  const handleClick = (id) => {\n    dispatch(loadRecords(id));\n  };\n\n  return (\n    <div\n      key={props.broadcast._id}\n      className={`title ${opened === props.broadcast._id ? \"active\" : \"\"}`}\n      onClick={() => handleClick(props.broadcast._id)}\n    >\n      {props.broadcast.title}\n    </div>\n  );\n}\n\nexport default Broadcast;\n","export function loadBroadcasts() {\n  return (dispatch) => {\n    dispatch({ type: \"load_broadcasts_start\" });\n\n    fetch(\"http://151.248.117.7:5005/api/onlines/\")\n      .then((response) => response.json())\n      .then((json) => {\n        dispatch({\n          type: \"load_broadcasts_success\",\n          payload: json,\n        });\n      });\n  };\n}\n\nexport function loadRecords(id) {\n  return (dispatch) => {\n    dispatch({ type: \"load_records_start\" });\n    dispatch({ type: \"set_opened\", payload: id });\n\n    fetch(`http://151.248.117.7:5005/api/onlines/${id}`)\n      .then((response) => response.json())\n      .then((json) => {\n        dispatch({\n          type: \"load_records_success\",\n          payload: json,\n        });\n      });\n  };\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"./Broadcasts.css\";\nimport Broadcast from \"./Broadcast\";\n\nfunction Broadcasts() {\n  const broadcasts = useSelector((state) => state.broadcasts.broadcasts);\n\n  return (\n    <div className=\"broadcasts\">\n      {broadcasts.map((broadcast) => {\n        return <Broadcast key={broadcast._id} broadcast={broadcast} />;\n      })}\n    </div>\n  );\n}\n\nexport default Broadcasts;\n","import React from \"react\";\nimport \"./Record.css\";\n\nfunction Record({ record }) {\n  return (\n    <div className=\"record\">\n      <div className=\"titleRecord\">{record.title}</div>\n      <div className=\"content\">{record.content}</div>\n    </div>\n  );\n}\n\nexport default Record;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"./Records.css\";\nimport Record from \"./Record\";\n\nfunction Records() {\n  const opened = useSelector((state) => state.broadcasts.opened);\n  const records = useSelector((state) => state.records.records);\n  const loading = useSelector((state) => state.records.loading);\n\n  if (opened === null) {\n    return (\n      <div className=\"choice\">\n        <i className=\"fas fa-long-arrow-alt-left\" />\n        Выберите трансляцию\n      </div>\n    );\n  }\n\n  if (loading) {\n    return <div className=\"choice\">Идет загрузка...</div>;\n  }\n\n  return (\n    <div className=\"records\">\n      {records.map((record) => {\n        return <Record record={record} />;\n      })}\n    </div>\n  );\n}\n\nexport default Records;\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Broadcasts from \"./Broadcasts\";\nimport { loadBroadcasts } from \"../redux/actions\";\nimport Records from \"./Records\";\n\nfunction App() {\n  const loading = useSelector((state) => state.broadcasts.loading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadBroadcasts());\n  }, [dispatch]);\n  return (\n    <div className=\"App\">\n      <div className=\"page\">\n        {loading ? \"Идет загрузка...\" : <Broadcasts />}\n        <Records />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const initialState = {\n  loading: true,\n  broadcasts: [],\n  opened: null,\n};\n\nexport default function broadcasts(state = initialState, action) {\n  switch (action.type) {\n    case \"load_broadcasts_start\":\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case \"set_opened\":\n      return {\n        ...state,\n        opened: action.payload,\n      };\n\n    case \"load_broadcasts_success\":\n      return {\n        ...state,\n        loading: false,\n        broadcasts: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","const initialState = {\n  loading: false,\n  records: [],\n};\n\nexport default function records(state = initialState, action) {\n  switch (action.type) {\n    case \"load_records_start\":\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case \"load_records_success\":\n      return {\n        ...state,\n        loading: false,\n        records: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\nimport broadcasts from \"./redux/broadcasts\";\nimport records from \"./redux/records\";\n\nconst logger = createLogger({\n  collapsed: true,\n  diff: true,\n});\n\nconst rootReducer = combineReducers({ broadcasts, records });\n\nconst store = createStore(rootReducer, applyMiddleware(thunk, logger));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}